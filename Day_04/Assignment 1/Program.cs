using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;



/*

Create a class Employee having private instance member
id - id is readonly property and generated by your application
name- write getter setter
salary- write getter setter
net salary
Write method who’s job is to deduct TDS 10% and return tax amount and set netsalary instance member after deducting tax.
Declare TDS as static variable.
Your application should create only 3 object if you try to create 4th object it should throw exception.
Give appropriate validation like salary can not be 0 or negative, maximum
Salary allowed is 50000 if you try to set more then 50000 it should give some error message.
When you run your application it should print name of company.

*/
namespace Assignment_1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            try
            {
                Project e1 = new Project(29000, "Akshay");
                Console.WriteLine($"Id ={e1.ID}  name = {e1.Name} salary ={e1.Salary} tax = {e1.TdsDed()} netSalry {e1.NetSalary} ");
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            try
            {
                Project e2 = new Project(45000, "Sushil");
                Console.WriteLine($"Id ={e2.ID}  name = {e2.Name} salary ={e2.Salary} tax = {e2.TdsDed()} netSalry {e2.NetSalary} ");
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            try
            {
                Project e3 = new Project(51000, "Amar");
                Console.WriteLine($"Id ={e3.ID}  name = {e3.Name} salary ={e3.Salary} tax = {e3.TdsDed()} netSalry {e3.NetSalary} ");
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            try
            {
                Project e4 = new Project(37000, "Amar");
                Console.WriteLine($"Id ={e4.ID}  name = {e4.Name} salary ={e4.Salary} tax = {e4.TdsDed()} netSalry {e4.NetSalary} ");
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            try
            {
                Project e5 = new Project(3500, "Shubham");
                Console.WriteLine($"Id ={e5.ID}  name = {e5.Name} salary ={e5.Salary} tax = {e5.TdsDed()} netSalry {e5.NetSalary} ");
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }
    }
        
}
